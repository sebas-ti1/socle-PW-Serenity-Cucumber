import type { BrowserCapabilities } from '@serenity-js/web';
import type * as playwright from 'playwright-core';
import type { PlaywrightOptions } from '../../PlaywrightOptions';
import { PlaywrightBrowsingSession } from './PlaywrightBrowsingSession';
import { PlaywrightPage } from './PlaywrightPage';
/**
 *  @group Models
 */
export declare class PlaywrightBrowsingSessionWithPage extends PlaywrightBrowsingSession {
    protected readonly page: playwright.Page;
    private readonly playwrightManagedPageId;
    constructor(page: playwright.Page, browserContextOptions: PlaywrightOptions, selectors: playwright.Selectors);
    protected registerCurrentPage(): Promise<PlaywrightPage>;
    protected createBrowserContext(options: PlaywrightOptions): Promise<playwright.BrowserContext>;
    /**
     * Closes any newly opened pages, leaving only the original one managed by Playwright Test.
     */
    closeAllPages(): Promise<void>;
    browserCapabilities(): Promise<BrowserCapabilities>;
}
//# sourceMappingURL=PlaywrightBrowsingSessionWithPage.d.ts.map