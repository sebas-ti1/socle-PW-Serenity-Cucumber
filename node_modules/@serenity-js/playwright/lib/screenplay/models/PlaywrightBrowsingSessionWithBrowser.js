"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlaywrightBrowsingSessionWithBrowser = void 0;
const PlaywrightBrowsingSession_1 = require("./PlaywrightBrowsingSession");
/**
 *  @group Models
 */
class PlaywrightBrowsingSessionWithBrowser extends PlaywrightBrowsingSession_1.PlaywrightBrowsingSession {
    browser;
    constructor(browser, browserContextOptions, selectors) {
        super(browserContextOptions, selectors);
        this.browser = browser;
    }
    async createBrowserContext(options) {
        return this.browser.newContext(this.browserContextOptions);
    }
    async registerCurrentPage() {
        const context = await this.browserContext();
        await context.newPage();
        // calling context.newPage() triggers a callback registered via browserContext(),
        // which wraps playwright.Page in PlaywrightPage and adds it to the list of pages
        // returned by this.allPages()
        const allPages = await this.allPages();
        return allPages.at(-1);
    }
    async closeAllPages() {
        await super.closeAllPages();
        const context = await this.browserContext();
        await context.close();
    }
    async browserCapabilities() {
        return {
            browserName: this.browser._initializer.name, // todo: raise a PR to Playwright to expose this information
            platformName: process.platform, // todo: get the actual platform from Playwright
            browserVersion: this.browser.version()
        };
    }
}
exports.PlaywrightBrowsingSessionWithBrowser = PlaywrightBrowsingSessionWithBrowser;
//# sourceMappingURL=PlaywrightBrowsingSessionWithBrowser.js.map